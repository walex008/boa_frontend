import {
  accountingChild,
  areaChild,
  assetsChild,
  branchChild,
  clientsChild,
  communicationChild,
  expensesChild,
  incomeChild,
  loansChild,
  payrollChild,
  savingsChild,
  settingsChild,
  ticketsChild,
  usersChild,
  zoneChild,
} from "../extras/MenuChildData";
import { DropMenu, MenuChild, NoDropMenu } from "../extras/Menus";
import { useState } from "react";

import { useAppSelector } from "../../app/hooks";
import { mode } from "../../appSlices/generalSlice";
import { useNavigate, useLocation } from "react-router-dom";

const SideNav = () => {
  const [showChild, setShowChild] = useState<string | null>(null);
  const navigate = useNavigate();
  const location = useLocation();

  const darkMode = useAppSelector(mode);
  const generalStyle =
    darkMode === "true" ? "fill-textGreyWhite" : "fill-textBlack";
  const currentStyle = "fill-blue";

  return (
    <div
      className={`h-full w-[calc(100%-6px)] relative ${
        darkMode === "true" ? "bg-bgSemiBlack" : "bg-textWhite"
      }`}
    >
      <div
        className={`h-[calc(100%-55px)] w-[290px] p-[21.433px_38px_20px_33px] border-t-[0.2px] border-t-textGrey overflow-y-auto scrollbar scrollbar-thumb-textGrey scrollbar-w-[6px] scrollbar-track-textGreyWhite scrollbar-rounded-[20px] fixed ${
          darkMode === "true" ? "bg-bgSemiBlack" : "bg-textWhite border-t-[0]"
        }`}
      >
        <NoDropMenu
          link="/dashboard"
          name="Dashboard"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M13.3333 25.3333V18.6667H18.6667V25.3333C18.6667 26.0667 19.2667 26.6667 20 26.6667H24C24.7333 26.6667 25.3333 26.0667 25.3333 25.3333V16H27.6C28.2133 16 28.5067 15.24 28.04 14.84L16.8933 4.79999C16.3867 4.34666 15.6133 4.34666 15.1067 4.79999L3.96001 14.84C3.50668 15.24 3.78668 16 4.40001 16H6.66668V25.3333C6.66668 26.0667 7.26668 26.6667 8.00001 26.6667H12C12.7333 26.6667 13.3333 26.0667 13.3333 25.3333Z" />
            </svg>
          }
        />
        <NoDropMenu
          link="/head-office"
          name="Head Office"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M6.39999 26.4V5.60001H5.99999C5.68173 5.60001 5.3765 5.47358 5.15146 5.24854C4.92642 5.0235 4.79999 4.71827 4.79999 4.40001C4.79999 4.08175 4.92642 3.77653 5.15146 3.55148C5.3765 3.32644 5.68173 3.20001 5.99999 3.20001H26C26.3182 3.20001 26.6235 3.32644 26.8485 3.55148C27.0736 3.77653 27.2 4.08175 27.2 4.40001C27.2 4.71827 27.0736 5.0235 26.8485 5.24854C26.6235 5.47358 26.3182 5.60001 26 5.60001H25.6V26.4H26C26.3182 26.4 26.6235 26.5264 26.8485 26.7515C27.0736 26.9765 27.2 27.2818 27.2 27.6C27.2 27.9183 27.0736 28.2235 26.8485 28.4485C26.6235 28.6736 26.3182 28.8 26 28.8H20.4C20.0817 28.8 19.7765 28.6736 19.5515 28.4485C19.3264 28.2235 19.2 27.9183 19.2 27.6V23.6C19.2 23.2818 19.0736 22.9765 18.8485 22.7515C18.6235 22.5264 18.3182 22.4 18 22.4H14C13.6817 22.4 13.3765 22.5264 13.1515 22.7515C12.9264 22.9765 12.8 23.2818 12.8 23.6V27.6C12.8 27.9183 12.6736 28.2235 12.4485 28.4485C12.2235 28.6736 11.9182 28.8 11.6 28.8H5.99999C5.68173 28.8 5.3765 28.6736 5.15146 28.4485C4.92642 28.2235 4.79999 27.9183 4.79999 27.6C4.79999 27.2818 4.92642 26.9765 5.15146 26.7515C5.3765 26.5264 5.68173 26.4 5.99999 26.4H6.39999ZM11.2 8.80001C11.2 8.58784 11.2843 8.38436 11.4343 8.23433C11.5843 8.0843 11.7878 8.00001 12 8.00001H13.6C13.8122 8.00001 14.0156 8.0843 14.1657 8.23433C14.3157 8.38436 14.4 8.58784 14.4 8.80001V10.4C14.4 10.6122 14.3157 10.8157 14.1657 10.9657C14.0156 11.1157 13.8122 11.2 13.6 11.2H12C11.7878 11.2 11.5843 11.1157 11.4343 10.9657C11.2843 10.8157 11.2 10.6122 11.2 10.4V8.80001ZM12 14.4C11.7878 14.4 11.5843 14.4843 11.4343 14.6343C11.2843 14.7844 11.2 14.9878 11.2 15.2V16.8C11.2 17.0122 11.2843 17.2157 11.4343 17.3657C11.5843 17.5157 11.7878 17.6 12 17.6H13.6C13.8122 17.6 14.0156 17.5157 14.1657 17.3657C14.3157 17.2157 14.4 17.0122 14.4 16.8V15.2C14.4 14.9878 14.3157 14.7844 14.1657 14.6343C14.0156 14.4843 13.8122 14.4 13.6 14.4H12ZM17.6 8.80001C17.6 8.58784 17.6843 8.38436 17.8343 8.23433C17.9843 8.0843 18.1878 8.00001 18.4 8.00001H20C20.2122 8.00001 20.4156 8.0843 20.5657 8.23433C20.7157 8.38436 20.8 8.58784 20.8 8.80001V10.4C20.8 10.6122 20.7157 10.8157 20.5657 10.9657C20.4156 11.1157 20.2122 11.2 20 11.2H18.4C18.1878 11.2 17.9843 11.1157 17.8343 10.9657C17.6843 10.8157 17.6 10.6122 17.6 10.4V8.80001ZM18.4 14.4C18.1878 14.4 17.9843 14.4843 17.8343 14.6343C17.6843 14.7844 17.6 14.9878 17.6 15.2V16.8C17.6 17.0122 17.6843 17.2157 17.8343 17.3657C17.9843 17.5157 18.1878 17.6 18.4 17.6H20C20.2122 17.6 20.4156 17.5157 20.5657 17.3657C20.7157 17.2157 20.8 17.0122 20.8 16.8V15.2C20.8 14.9878 20.7157 14.7844 20.5657 14.6343C20.4156 14.4843 20.2122 14.4 20 14.4H18.4Z"
              />
            </svg>
          }
        />
        <DropMenu
          pClick={() => {
            setShowChild((child) => (child === "Zones" ? null : "Zones"));
            navigate("/zones");
          }}
          link="zones"
          name="Zones"
          img={
            <svg
              className={` 
               
                group-hover:fill-blue
               ${
                 location.pathname.split("/")[1] === "zones"
                   ? currentStyle
                   : generalStyle
               }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M14.4 4.86668C14.8616 4.52048 15.423 4.33334 16 4.33334C16.577 4.33334 17.1384 4.52048 17.6 4.86668L26.9333 11.8667C27.2645 12.1151 27.5333 12.4372 27.7185 12.8074C27.9036 13.1777 28 13.586 28 14V25.3333C28 26.0406 27.719 26.7189 27.219 27.219C26.7189 27.7191 26.0406 28 25.3333 28H6.66667C5.95942 28 5.28115 27.7191 4.78105 27.219C4.28095 26.7189 4 26.0406 4 25.3333V14C4 13.586 4.09639 13.1777 4.28153 12.8074C4.46667 12.4372 4.73548 12.1151 5.06667 11.8667L14.4 4.86668ZM17.3333 13.3333C17.3333 12.9797 17.1929 12.6406 16.9428 12.3905C16.6928 12.1405 16.3536 12 16 12C15.6464 12 15.3072 12.1405 15.0572 12.3905C14.8071 12.6406 14.6667 12.9797 14.6667 13.3333V21.3333C14.6667 21.687 14.8071 22.0261 15.0572 22.2762C15.3072 22.5262 15.6464 22.6667 16 22.6667C16.3536 22.6667 16.6928 22.5262 16.9428 22.2762C17.1929 22.0261 17.3333 21.687 17.3333 21.3333V13.3333ZM12 17.3333C12 16.9797 11.8595 16.6406 11.6095 16.3905C11.3594 16.1405 11.0203 16 10.6667 16C10.313 16 9.97391 16.1405 9.72386 16.3905C9.47381 16.6406 9.33333 16.9797 9.33333 17.3333V21.3333C9.33333 21.687 9.47381 22.0261 9.72386 22.2762C9.97391 22.5262 10.313 22.6667 10.6667 22.6667C11.0203 22.6667 11.3594 22.5262 11.6095 22.2762C11.8595 22.0261 12 21.687 12 21.3333V17.3333ZM22.6667 20C22.6667 19.6464 22.5262 19.3072 22.2761 19.0572C22.0261 18.8072 21.687 18.6667 21.3333 18.6667C20.9797 18.6667 20.6406 18.8072 20.3905 19.0572C20.1405 19.3072 20 19.6464 20 20V21.3333C20 21.687 20.1405 22.0261 20.3905 22.2762C20.6406 22.5262 20.9797 22.6667 21.3333 22.6667C21.687 22.6667 22.0261 22.5262 22.2761 22.2762C22.5262 22.0261 22.6667 21.687 22.6667 21.3333V20Z"
              />
            </svg>
          }
          children={
            <MenuChild
              child={zoneChild}
              state={showChild}
              pName="Zones"
            ></MenuChild>
          }
        />
        <DropMenu
          pClick={() => {
            setShowChild((child) => (child === "Areas" ? null : "Areas"));
            navigate("/areas");
          }}
          link="areas"
          name="Areas"
          img={
            <svg
              className={` 
               
                group-hover:fill-blue
               ${
                 location.pathname.split("/")[1] === "areas"
                   ? currentStyle
                   : generalStyle
               }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_59_1092)">
                <path d="M16 32C16 32 4.79999 17.392 4.79999 11.2C4.79999 9.7292 5.08968 8.27279 5.65254 6.91395C6.21539 5.5551 7.04038 4.32042 8.08039 3.2804C9.12041 2.24039 10.3551 1.4154 11.7139 0.852549C13.0728 0.289697 14.5292 0 16 0C17.4708 0 18.9272 0.289697 20.286 0.852549C21.6449 1.4154 22.8796 2.24039 23.9196 3.2804C24.9596 4.32042 25.7846 5.5551 26.3474 6.91395C26.9103 8.27279 27.2 9.7292 27.2 11.2C27.2 17.392 16 32 16 32ZM16 14.4C16.8487 14.4 17.6626 14.0629 18.2627 13.4627C18.8628 12.8626 19.2 12.0487 19.2 11.2C19.2 10.3513 18.8628 9.53737 18.2627 8.93726C17.6626 8.33714 16.8487 8 16 8C15.1513 8 14.3374 8.33714 13.7372 8.93726C13.1371 9.53737 12.8 10.3513 12.8 11.2C12.8 12.0487 13.1371 12.8626 13.7372 13.4627C14.3374 14.0629 15.1513 14.4 16 14.4Z" />
              </g>
              <defs>
                <clipPath id="clip0_59_1092">
                  <rect width="32" height="32" fill="white" />
                </clipPath>
              </defs>
            </svg>
          }
          children={
            <MenuChild
              child={areaChild}
              state={showChild}
              pName="Areas"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() => {
            setShowChild((child) => (child === "Branches" ? null : "Branches"));
            navigate("/branches");
          }}
          link="branches"
          name="Branches"
          img={
            <svg
              className={` 
               
                group-hover:fill-blue
               ${
                 location.pathname.split("/")[1] === "branches"
                   ? currentStyle
                   : generalStyle
               }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M18.6667 13.3333V18.6667H13.3333V13.3333H18.6667ZM21.3333 13.3333H28V18.6667H21.3333V13.3333ZM18.6667 28H13.3333V21.3333H18.6667V28ZM21.3333 28V21.3333H28V26.6667C28 27.0203 27.8595 27.3594 27.6095 27.6095C27.3594 27.8595 27.0203 28 26.6667 28H21.3333ZM18.6667 4V10.6667H13.3333V4H18.6667ZM21.3333 4H26.6667C27.0203 4 27.3594 4.14048 27.6095 4.39052C27.8595 4.64057 28 4.97971 28 5.33333V10.6667H21.3333V4ZM10.6667 13.3333V18.6667H4V13.3333H10.6667ZM10.6667 28H5.33333C4.97971 28 4.64057 27.8595 4.39052 27.6095C4.14048 27.3594 4 27.0203 4 26.6667V21.3333H10.6667V28ZM10.6667 4V10.6667H4V5.33333C4 4.97971 4.14048 4.64057 4.39052 4.39052C4.64057 4.14048 4.97971 4 5.33333 4H10.6667Z" />
            </svg>
          }
          children={
            <MenuChild
              child={branchChild}
              state={showChild}
              pName="Branches"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() => {
            setShowChild((child) => (child === "Payroll" ? null : "Payroll"));
            navigate("/payroll");
          }}
          link="payroll"
          name="Payroll"
          img={
            <svg
              className={` 
               
            group-hover:fill-blue
           ${
             location.pathname.split("/")[1] === "client"
               ? currentStyle
               : generalStyle
           }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M13.24 17.32C13.3733 17.32 16.4667 17.4533 18.3067 17H18.32C20.44 16.48 23.3867 14.9867 24.1467 10.1067C24.1467 10.1067 25.84 4 17.44 4H10.2267C9.57334 4 9.01334 4.48 8.90667 5.12L5.84 24.5333C5.77334 24.9333 6.09334 25.3067 6.49334 25.3067H11.0667L12.1867 18.2133C12.2667 17.7067 12.7067 17.32 13.24 17.32Z" />
              <path d="M25.32 11.0533C24.24 16.0267 20.84 18.6533 15.4267 18.6533H13.4667L12.0933 27.3467C12.04 27.6933 12.3067 28 12.6533 28H15.1867C15.64 28 16.04 27.6667 16.1067 27.2133C16.2133 26.68 16.8 22.7867 16.92 22.12C16.9867 21.6667 17.3867 21.3333 17.84 21.3333H18.4267C22.1867 21.3333 25.1333 19.8 26 15.3867C26.3467 13.6 26.16 12.1333 25.32 11.0533Z" />
            </svg>
          }
          children={
            <MenuChild
              child={payrollChild}
              state={showChild}
              pName="Payroll"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() => {
            setShowChild((child) => (child === "Clients" ? null : "Clients"));
            navigate("/client");
          }}
          link="client" 
          name="Clients"
          img={
            <svg
              className={` 
               
                group-hover:fill-blue
               ${
                 location.pathname.split("/")[1] === "client"
                   ? currentStyle
                   : generalStyle
               }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 14.4C17.273 14.4 18.4939 13.8943 19.3941 12.9941C20.2943 12.0939 20.8 10.873 20.8 9.6C20.8 8.32696 20.2943 7.10606 19.3941 6.20589C18.4939 5.30571 17.273 4.8 16 4.8C14.7269 4.8 13.5061 5.30571 12.6059 6.20589C11.7057 7.10606 11.2 8.32696 11.2 9.6C11.2 10.873 11.7057 12.0939 12.6059 12.9941C13.5061 13.8943 14.7269 14.4 16 14.4ZM9.59999 12.8C9.59999 13.6487 9.26285 14.4626 8.66273 15.0627C8.06261 15.6629 7.24868 16 6.39999 16C5.5513 16 4.73736 15.6629 4.13725 15.0627C3.53713 14.4626 3.19999 13.6487 3.19999 12.8C3.19999 11.9513 3.53713 11.1374 4.13725 10.5373C4.73736 9.93714 5.5513 9.6 6.39999 9.6C7.24868 9.6 8.06261 9.93714 8.66273 10.5373C9.26285 11.1374 9.59999 11.9513 9.59999 12.8ZM2.38399 24.5216C2.11085 24.3664 1.9063 24.1138 1.81119 23.8144C1.52928 22.9013 1.52632 21.9249 1.8027 21.0101C2.07908 20.0954 2.62221 19.2839 3.36254 18.6797C4.10287 18.0754 5.0067 17.706 5.9583 17.6185C6.90989 17.5311 7.86593 17.7296 8.70399 18.1888C6.9818 19.8812 5.90388 22.1214 5.65599 24.5232C5.61919 24.8784 5.63359 25.2304 5.69599 25.5696C4.52825 25.4686 3.39726 25.1108 2.38399 24.5216ZM26.304 25.568C27.4716 25.4675 28.6026 25.1102 29.616 24.5216C29.8885 24.3661 30.0925 24.1136 30.1872 23.8144C30.4696 22.9012 30.4729 21.9245 30.1967 21.0095C29.9205 20.0944 29.3774 19.2826 28.637 18.6782C27.8965 18.0737 26.9925 17.704 26.0407 17.6166C25.0888 17.5291 24.1326 17.7278 23.2944 18.1872C25.0181 19.8796 26.0972 22.1204 26.3456 24.5232C26.3812 24.8722 26.3672 25.2245 26.304 25.5696V25.568ZM28.8 12.8C28.8 13.6487 28.4628 14.4626 27.8627 15.0627C27.2626 15.6629 26.4487 16 25.6 16C24.7513 16 23.9374 15.6629 23.3372 15.0627C22.7371 14.4626 22.4 13.6487 22.4 12.8C22.4 11.9513 22.7371 11.1374 23.3372 10.5373C23.9374 9.93714 24.7513 9.6 25.6 9.6C26.4487 9.6 27.2626 9.93714 27.8627 10.5373C28.4628 11.1374 28.8 11.9513 28.8 12.8ZM8.48639 25.904C8.32859 25.7627 8.20626 25.5862 8.12927 25.3889C8.05227 25.1915 8.02279 24.9788 8.04319 24.768C8.2467 22.7992 9.17286 20.9757 10.6426 19.65C12.1124 18.3243 14.0215 17.5906 16.0008 17.5906C17.9801 17.5906 19.8892 18.3243 21.3589 19.65C22.8287 20.9757 23.7549 22.7992 23.9584 24.768C23.9789 24.9789 23.9495 25.1916 23.8725 25.3889C23.7955 25.5863 23.6731 25.7628 23.5152 25.904C21.4579 27.7711 18.7782 28.8037 16 28.8C13.2223 28.8035 10.5432 27.7709 8.48639 25.904Z" />
            </svg>
          }
          children={
            <MenuChild
              child={clientsChild}
              state={showChild}
              pName="Clients"
            ></MenuChild>
          }
        />
        <DropMenu
          pClick={() =>
            setShowChild((child) =>
              child === "Communication" ? null : "Communication"
            )
          }
          name="Communication"
          link="communication"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M5.33333 26.6667C4.59999 26.6667 3.97199 26.4053 3.44933 25.8827C2.92666 25.36 2.66577 24.7324 2.66666 24V8C2.66666 7.26667 2.92799 6.63867 3.45066 6.116C3.97333 5.59333 4.60088 5.33244 5.33333 5.33333H26.6667C27.4 5.33333 28.028 5.59467 28.5507 6.11733C29.0733 6.64 29.3342 7.26756 29.3333 8V24C29.3333 24.7333 29.072 25.3613 28.5493 25.884C28.0267 26.4067 27.3991 26.6676 26.6667 26.6667H5.33333ZM16 17.3333L26.6667 10.6667V8L16 14.6667L5.33333 8V10.6667L16 17.3333Z" />
            </svg>
          }
          children={
            <MenuChild
              child={communicationChild}
              state={showChild}
              pName="Communication"
            ></MenuChild>
          }
        />
        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Tickets" ? null : "Tickets"))
          }
          name="Tickets"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 29.1907C8.63599 29.1907 2.66666 23.2213 2.66666 15.8573C2.66666 8.49466 8.63599 2.524 16 2.524C23.364 2.524 29.3333 8.49466 29.3333 15.8573C29.3333 23.2213 23.364 29.1907 16 29.1907ZM17.7013 18.2333L18.2267 17.8227C18.7096 17.4453 19.1134 16.9766 19.4152 16.4432C19.7169 15.9098 19.9107 15.3221 19.9853 14.7138C20.06 14.1056 20.0141 13.4885 19.8503 12.898C19.6865 12.3074 19.408 11.7549 19.0307 11.272C18.6533 10.7891 18.1846 10.3852 17.6512 10.0835C17.1177 9.78171 16.5301 9.58797 15.9218 9.51331C15.3135 9.43865 14.6965 9.48454 14.106 9.64834C13.5154 9.81215 12.9629 10.0907 12.48 10.468L11.9547 10.8787C11.8138 10.9854 11.6955 11.1191 11.6068 11.2719C11.5181 11.4248 11.4606 11.5938 11.4377 11.769C11.4149 11.9443 11.4271 12.1223 11.4737 12.2928C11.5203 12.4633 11.6003 12.6229 11.7091 12.7621C11.8179 12.9014 11.9533 13.0177 12.1074 13.1042C12.2616 13.1907 12.4314 13.2456 12.607 13.2659C12.7825 13.2862 12.9604 13.2714 13.1302 13.2223C13.3 13.1732 13.4583 13.0908 13.596 12.98L14.1213 12.5693C14.5395 12.2448 15.0692 12.0993 15.5945 12.1646C16.1197 12.23 16.5977 12.5009 16.9235 12.918C17.2494 13.3351 17.3967 13.8644 17.333 14.3898C17.2694 14.9153 17 15.3941 16.584 15.7213L16.0587 16.132C15.9207 16.2399 15.8053 16.3738 15.7191 16.5263C15.6329 16.6787 15.5776 16.8467 15.5563 17.0205C15.535 17.1943 15.5481 17.3707 15.595 17.5394C15.6418 17.7082 15.7215 17.866 15.8293 18.004C15.9372 18.142 16.0712 18.2574 16.2236 18.3436C16.3761 18.4297 16.544 18.4851 16.7178 18.5064C16.8917 18.5277 17.068 18.5145 17.2367 18.4677C17.4055 18.4208 17.5633 18.3412 17.7013 18.2333ZM16 22.524C16.3536 22.524 16.6927 22.3835 16.9428 22.1335C17.1928 21.8834 17.3333 21.5443 17.3333 21.1907C17.3333 20.837 17.1928 20.4979 16.9428 20.2479C16.6927 19.9978 16.3536 19.8573 16 19.8573C15.6464 19.8573 15.3072 19.9978 15.0572 20.2479C14.8071 20.4979 14.6667 20.837 14.6667 21.1907C14.6667 21.5443 14.8071 21.8834 15.0572 22.1335C15.3072 22.3835 15.6464 22.524 16 22.524Z" />
            </svg>
          }
          children={
            <MenuChild
              child={ticketsChild}
              state={showChild}
              pName="Tickets"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Loans" ? null : "Loans"))
          }
          name="Loans"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M16.026 4C13.0147 4 10.2713 4.99467 8.648 5.80733C8.50134 5.88067 8.36467 5.95267 8.23734 6.022C7.98534 6.15933 7.77067 6.28733 7.6 6.4L9.44667 9.11867L10.316 9.46467C13.7133 11.1787 18.2693 11.1787 21.6673 9.46467L22.654 8.95267L24.4 6.4C24.0384 6.16404 23.6623 5.95095 23.274 5.762C21.6587 4.958 18.9807 4 16.0267 4H16.026ZM11.7313 7.07733C11.0774 6.95497 10.4316 6.7929 9.79734 6.592C11.318 5.91667 13.584 5.2 16.026 5.2C17.7173 5.2 19.3167 5.544 20.6393 5.98C19.0893 6.198 17.4353 6.568 15.8593 7.02333C14.6193 7.382 13.17 7.34333 11.7313 7.07733ZM22.3713 10.4533L22.2073 10.536C18.47 12.4213 13.5127 12.4213 9.77534 10.536L9.62 10.4573C4.00534 16.618 -0.281331 27.998 16.026 27.998C32.3333 27.998 27.942 16.4053 22.3713 10.4533ZM15.3333 16C14.9797 16 14.6406 16.1405 14.3905 16.3905C14.1405 16.6406 14 16.9797 14 17.3333C14 17.687 14.1405 18.0261 14.3905 18.2761C14.6406 18.5262 14.9797 18.6667 15.3333 18.6667V16ZM16.6667 14.6667V14H15.3333V14.6667C14.6261 14.6667 13.9478 14.9476 13.4477 15.4477C12.9476 15.9478 12.6667 16.6261 12.6667 17.3333C12.6667 18.0406 12.9476 18.7189 13.4477 19.219C13.9478 19.719 14.6261 20 15.3333 20V22.6667C14.7533 22.6667 14.2593 22.2967 14.0753 21.778C14.048 21.6931 14.004 21.6146 13.9458 21.5471C13.8876 21.4795 13.8165 21.4244 13.7366 21.3848C13.6568 21.3452 13.5698 21.3221 13.4808 21.3167C13.3918 21.3113 13.3027 21.3239 13.2186 21.3536C13.1346 21.3833 13.0573 21.4295 12.9915 21.4896C12.9256 21.5497 12.8725 21.6223 12.8352 21.7033C12.7979 21.7843 12.7772 21.8719 12.7744 21.961C12.7715 22.0501 12.7866 22.1388 12.8187 22.222C13.0026 22.742 13.3431 23.1922 13.7935 23.5106C14.2438 23.829 14.7818 24 15.3333 24V24.6667H16.6667V24C17.3739 24 18.0522 23.719 18.5523 23.219C19.0524 22.7189 19.3333 22.0406 19.3333 21.3333C19.3333 20.6261 19.0524 19.9478 18.5523 19.4477C18.0522 18.9476 17.3739 18.6667 16.6667 18.6667V16C17.2467 16 17.7407 16.37 17.9247 16.8887C17.952 16.9735 17.996 17.052 18.0542 17.1196C18.1124 17.1871 18.1835 17.2423 18.2634 17.2819C18.3432 17.3215 18.4302 17.3446 18.5192 17.35C18.6082 17.3553 18.6973 17.3428 18.7814 17.3131C18.8654 17.2834 18.9427 17.2371 19.0085 17.1771C19.0744 17.117 19.1275 17.0443 19.1648 16.9634C19.2021 16.8824 19.2228 16.7948 19.2256 16.7057C19.2285 16.6166 19.2134 16.5278 19.1813 16.4447C18.9974 15.9247 18.6569 15.4745 18.2065 15.1561C17.7562 14.8377 17.2182 14.6667 16.6667 14.6667ZM16.6667 20V22.6667C17.0203 22.6667 17.3594 22.5262 17.6095 22.2761C17.8595 22.0261 18 21.687 18 21.3333C18 20.9797 17.8595 20.6406 17.6095 20.3905C17.3594 20.1405 17.0203 20 16.6667 20Z"
              />
            </svg>
          }
          children={
            <MenuChild
              child={loansChild}
              state={showChild}
              pName="Loans"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Expenses" ? null : "Expenses"))
          }
          name="Expenses"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M26.6667 16L18.1333 6.66667V11.3333C13.8667 11.3333 5.33334 14.1333 5.33334 25.3333C5.33334 23.7773 7.89334 20.6667 18.1333 20.6667V25.3333L26.6667 16Z"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
          }
          children={
            <MenuChild
              child={expensesChild}
              state={showChild}
              pName="Expenses"
            ></MenuChild>
          }
        />

        <NoDropMenu
          link="/"
          name="Reports"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M29.3333 28H2.66666V4H5.33332V25.3333H7.99999V13.3333H13.3333V25.3333H16V8H21.3333V25.3333H24V18.6667H29.3333V28Z" />
            </svg>
          }
        />

        <NoDropMenu
          link="/"
          name="Custom Fields"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M5.33333 17.3333C6.06667 17.3333 6.66667 16.7333 6.66667 16C6.66667 15.2667 6.06667 14.6667 5.33333 14.6667C4.6 14.6667 4 15.2667 4 16C4 16.7333 4.6 17.3333 5.33333 17.3333ZM5.33333 22.6667C6.06667 22.6667 6.66667 22.0667 6.66667 21.3333C6.66667 20.6 6.06667 20 5.33333 20C4.6 20 4 20.6 4 21.3333C4 22.0667 4.6 22.6667 5.33333 22.6667ZM5.33333 12C6.06667 12 6.66667 11.4 6.66667 10.6667C6.66667 9.93333 6.06667 9.33333 5.33333 9.33333C4.6 9.33333 4 9.93333 4 10.6667C4 11.4 4.6 12 5.33333 12ZM10.6667 17.3333H26.6667C27.4 17.3333 28 16.7333 28 16C28 15.2667 27.4 14.6667 26.6667 14.6667H10.6667C9.93333 14.6667 9.33333 15.2667 9.33333 16C9.33333 16.7333 9.93333 17.3333 10.6667 17.3333ZM10.6667 22.6667H26.6667C27.4 22.6667 28 22.0667 28 21.3333C28 20.6 27.4 20 26.6667 20H10.6667C9.93333 20 9.33333 20.6 9.33333 21.3333C9.33333 22.0667 9.93333 22.6667 10.6667 22.6667ZM9.33333 10.6667C9.33333 11.4 9.93333 12 10.6667 12H26.6667C27.4 12 28 11.4 28 10.6667C28 9.93333 27.4 9.33333 26.6667 9.33333H10.6667C9.93333 9.33333 9.33333 9.93333 9.33333 10.6667ZM5.33333 17.3333C6.06667 17.3333 6.66667 16.7333 6.66667 16C6.66667 15.2667 6.06667 14.6667 5.33333 14.6667C4.6 14.6667 4 15.2667 4 16C4 16.7333 4.6 17.3333 5.33333 17.3333ZM5.33333 22.6667C6.06667 22.6667 6.66667 22.0667 6.66667 21.3333C6.66667 20.6 6.06667 20 5.33333 20C4.6 20 4 20.6 4 21.3333C4 22.0667 4.6 22.6667 5.33333 22.6667ZM5.33333 12C6.06667 12 6.66667 11.4 6.66667 10.6667C6.66667 9.93333 6.06667 9.33333 5.33333 9.33333C4.6 9.33333 4 9.93333 4 10.6667C4 11.4 4.6 12 5.33333 12ZM10.6667 17.3333H26.6667C27.4 17.3333 28 16.7333 28 16C28 15.2667 27.4 14.6667 26.6667 14.6667H10.6667C9.93333 14.6667 9.33333 15.2667 9.33333 16C9.33333 16.7333 9.93333 17.3333 10.6667 17.3333ZM10.6667 22.6667H26.6667C27.4 22.6667 28 22.0667 28 21.3333C28 20.6 27.4 20 26.6667 20H10.6667C9.93333 20 9.33333 20.6 9.33333 21.3333C9.33333 22.0667 9.93333 22.6667 10.6667 22.6667ZM9.33333 10.6667C9.33333 11.4 9.93333 12 10.6667 12H26.6667C27.4 12 28 11.4 28 10.6667C28 9.93333 27.4 9.33333 26.6667 9.33333H10.6667C9.93333 9.33333 9.33333 9.93333 9.33333 10.6667Z" />
            </svg>
          }
        />
        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Savings" ? null : "Savings"))
          }
          name="Savings"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M14.4 4.86668C14.8616 4.52048 15.423 4.33334 16 4.33334C16.577 4.33334 17.1384 4.52048 17.6 4.86668L26.9333 11.8667C27.2645 12.1151 27.5333 12.4372 27.7185 12.8074C27.9036 13.1777 28 13.586 28 14V25.3333C28 26.0406 27.719 26.7189 27.219 27.219C26.7189 27.7191 26.0406 28 25.3333 28H6.66667C5.95942 28 5.28115 27.7191 4.78105 27.219C4.28095 26.7189 4 26.0406 4 25.3333V14C4 13.586 4.09639 13.1777 4.28153 12.8074C4.46667 12.4372 4.73548 12.1151 5.06667 11.8667L14.4 4.86668ZM17.3333 13.3333C17.3333 12.9797 17.1929 12.6406 16.9428 12.3905C16.6928 12.1405 16.3536 12 16 12C15.6464 12 15.3072 12.1405 15.0572 12.3905C14.8071 12.6406 14.6667 12.9797 14.6667 13.3333V21.3333C14.6667 21.687 14.8071 22.0261 15.0572 22.2762C15.3072 22.5262 15.6464 22.6667 16 22.6667C16.3536 22.6667 16.6928 22.5262 16.9428 22.2762C17.1929 22.0261 17.3333 21.687 17.3333 21.3333V13.3333ZM12 17.3333C12 16.9797 11.8595 16.6406 11.6095 16.3905C11.3594 16.1405 11.0203 16 10.6667 16C10.313 16 9.97391 16.1405 9.72386 16.3905C9.47381 16.6406 9.33333 16.9797 9.33333 17.3333V21.3333C9.33333 21.687 9.47381 22.0261 9.72386 22.2762C9.97391 22.5262 10.313 22.6667 10.6667 22.6667C11.0203 22.6667 11.3594 22.5262 11.6095 22.2762C11.8595 22.0261 12 21.687 12 21.3333V17.3333ZM22.6667 20C22.6667 19.6464 22.5262 19.3072 22.2761 19.0572C22.0261 18.8072 21.687 18.6667 21.3333 18.6667C20.9797 18.6667 20.6406 18.8072 20.3905 19.0572C20.1405 19.3072 20 19.6464 20 20V21.3333C20 21.687 20.1405 22.0261 20.3905 22.2762C20.6406 22.5262 20.9797 22.6667 21.3333 22.6667C21.687 22.6667 22.0261 22.5262 22.2761 22.2762C22.5262 22.0261 22.6667 21.687 22.6667 21.3333V20Z"
              />
            </svg>
          }
          children={
            <MenuChild
              child={savingsChild}
              state={showChild}
              pName="Savings"
            ></MenuChild>
          }
        />
        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Income" ? null : "Income"))
          }
          name="Income"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M16.026 4C13.0147 4 10.2713 4.99467 8.648 5.80733C8.50134 5.88067 8.36467 5.95267 8.23734 6.022C7.98534 6.15933 7.77067 6.28733 7.6 6.4L9.44667 9.11867L10.316 9.46467C13.7133 11.1787 18.2693 11.1787 21.6673 9.46467L22.654 8.95267L24.4 6.4C24.0384 6.16404 23.6623 5.95095 23.274 5.762C21.6587 4.958 18.9807 4 16.0267 4H16.026ZM11.7313 7.07733C11.0774 6.95497 10.4316 6.7929 9.79734 6.592C11.318 5.91667 13.584 5.2 16.026 5.2C17.7173 5.2 19.3167 5.544 20.6393 5.98C19.0893 6.198 17.4353 6.568 15.8593 7.02333C14.6193 7.382 13.17 7.34333 11.7313 7.07733ZM22.3713 10.4533L22.2073 10.536C18.47 12.4213 13.5127 12.4213 9.77534 10.536L9.62 10.4573C4.00534 16.618 -0.281331 27.998 16.026 27.998C32.3333 27.998 27.942 16.4053 22.3713 10.4533ZM15.3333 16C14.9797 16 14.6406 16.1405 14.3905 16.3905C14.1405 16.6406 14 16.9797 14 17.3333C14 17.687 14.1405 18.0261 14.3905 18.2761C14.6406 18.5262 14.9797 18.6667 15.3333 18.6667V16ZM16.6667 14.6667V14H15.3333V14.6667C14.6261 14.6667 13.9478 14.9476 13.4477 15.4477C12.9476 15.9478 12.6667 16.6261 12.6667 17.3333C12.6667 18.0406 12.9476 18.7189 13.4477 19.219C13.9478 19.719 14.6261 20 15.3333 20V22.6667C14.7533 22.6667 14.2593 22.2967 14.0753 21.778C14.048 21.6931 14.004 21.6146 13.9458 21.5471C13.8876 21.4795 13.8165 21.4244 13.7366 21.3848C13.6568 21.3452 13.5698 21.3221 13.4808 21.3167C13.3918 21.3113 13.3027 21.3239 13.2186 21.3536C13.1346 21.3833 13.0573 21.4295 12.9915 21.4896C12.9256 21.5497 12.8725 21.6223 12.8352 21.7033C12.7979 21.7843 12.7772 21.8719 12.7744 21.961C12.7715 22.0501 12.7866 22.1388 12.8187 22.222C13.0026 22.742 13.3431 23.1922 13.7935 23.5106C14.2438 23.829 14.7818 24 15.3333 24V24.6667H16.6667V24C17.3739 24 18.0522 23.719 18.5523 23.219C19.0524 22.7189 19.3333 22.0406 19.3333 21.3333C19.3333 20.6261 19.0524 19.9478 18.5523 19.4477C18.0522 18.9476 17.3739 18.6667 16.6667 18.6667V16C17.2467 16 17.7407 16.37 17.9247 16.8887C17.952 16.9735 17.996 17.052 18.0542 17.1196C18.1124 17.1871 18.1835 17.2423 18.2634 17.2819C18.3432 17.3215 18.4302 17.3446 18.5192 17.35C18.6082 17.3553 18.6973 17.3428 18.7814 17.3131C18.8654 17.2834 18.9427 17.2371 19.0085 17.1771C19.0744 17.117 19.1275 17.0443 19.1648 16.9634C19.2021 16.8824 19.2228 16.7948 19.2256 16.7057C19.2285 16.6166 19.2134 16.5278 19.1813 16.4447C18.9974 15.9247 18.6569 15.4745 18.2065 15.1561C17.7562 14.8377 17.2182 14.6667 16.6667 14.6667ZM16.6667 20V22.6667C17.0203 22.6667 17.3594 22.5262 17.6095 22.2761C17.8595 22.0261 18 21.687 18 21.3333C18 20.9797 17.8595 20.6406 17.6095 20.3905C17.3594 20.1405 17.0203 20 16.6667 20Z"
              />
            </svg>
          }
          children={
            <MenuChild
              child={incomeChild}
              state={showChild}
              pName="Income"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Users" ? null : "Users"))
          }
          name="Users"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 14.4C17.273 14.4 18.4939 13.8943 19.3941 12.9941C20.2943 12.0939 20.8 10.873 20.8 9.6C20.8 8.32696 20.2943 7.10606 19.3941 6.20589C18.4939 5.30571 17.273 4.8 16 4.8C14.7269 4.8 13.5061 5.30571 12.6059 6.20589C11.7057 7.10606 11.2 8.32696 11.2 9.6C11.2 10.873 11.7057 12.0939 12.6059 12.9941C13.5061 13.8943 14.7269 14.4 16 14.4ZM9.59999 12.8C9.59999 13.6487 9.26285 14.4626 8.66273 15.0627C8.06261 15.6629 7.24868 16 6.39999 16C5.5513 16 4.73736 15.6629 4.13725 15.0627C3.53713 14.4626 3.19999 13.6487 3.19999 12.8C3.19999 11.9513 3.53713 11.1374 4.13725 10.5373C4.73736 9.93714 5.5513 9.6 6.39999 9.6C7.24868 9.6 8.06261 9.93714 8.66273 10.5373C9.26285 11.1374 9.59999 11.9513 9.59999 12.8ZM2.38399 24.5216C2.11085 24.3664 1.9063 24.1138 1.81119 23.8144C1.52928 22.9013 1.52632 21.9249 1.8027 21.0101C2.07908 20.0954 2.62221 19.2839 3.36254 18.6797C4.10287 18.0754 5.0067 17.706 5.9583 17.6185C6.90989 17.5311 7.86593 17.7296 8.70399 18.1888C6.9818 19.8812 5.90388 22.1214 5.65599 24.5232C5.61919 24.8784 5.63359 25.2304 5.69599 25.5696C4.52825 25.4686 3.39726 25.1108 2.38399 24.5216ZM26.304 25.568C27.4716 25.4675 28.6026 25.1102 29.616 24.5216C29.8885 24.3661 30.0925 24.1136 30.1872 23.8144C30.4696 22.9012 30.4729 21.9245 30.1967 21.0095C29.9205 20.0944 29.3774 19.2826 28.637 18.6782C27.8965 18.0737 26.9925 17.704 26.0407 17.6166C25.0888 17.5291 24.1326 17.7278 23.2944 18.1872C25.0181 19.8796 26.0972 22.1204 26.3456 24.5232C26.3812 24.8722 26.3672 25.2245 26.304 25.5696V25.568ZM28.8 12.8C28.8 13.6487 28.4628 14.4626 27.8627 15.0627C27.2626 15.6629 26.4487 16 25.6 16C24.7513 16 23.9374 15.6629 23.3372 15.0627C22.7371 14.4626 22.4 13.6487 22.4 12.8C22.4 11.9513 22.7371 11.1374 23.3372 10.5373C23.9374 9.93714 24.7513 9.6 25.6 9.6C26.4487 9.6 27.2626 9.93714 27.8627 10.5373C28.4628 11.1374 28.8 11.9513 28.8 12.8ZM8.48639 25.904C8.32859 25.7627 8.20626 25.5862 8.12927 25.3889C8.05227 25.1915 8.02279 24.9788 8.04319 24.768C8.2467 22.7992 9.17286 20.9757 10.6426 19.65C12.1124 18.3243 14.0215 17.5906 16.0008 17.5906C17.9801 17.5906 19.8892 18.3243 21.3589 19.65C22.8287 20.9757 23.7549 22.7992 23.9584 24.768C23.9789 24.9789 23.9495 25.1916 23.8725 25.3889C23.7955 25.5863 23.6731 25.7628 23.5152 25.904C21.4579 27.7711 18.7782 28.8037 16 28.8C13.2223 28.8035 10.5432 27.7709 8.48639 25.904Z" />
            </svg>
          }
          children={
            <MenuChild
              child={usersChild}
              state={showChild}
              pName="Users"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) =>
              child === "Accounting" ? null : "Accounting"
            )
          }
          name="Accounting"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 14.4C17.273 14.4 18.4939 13.8943 19.3941 12.9941C20.2943 12.0939 20.8 10.873 20.8 9.6C20.8 8.32696 20.2943 7.10606 19.3941 6.20589C18.4939 5.30571 17.273 4.8 16 4.8C14.7269 4.8 13.5061 5.30571 12.6059 6.20589C11.7057 7.10606 11.2 8.32696 11.2 9.6C11.2 10.873 11.7057 12.0939 12.6059 12.9941C13.5061 13.8943 14.7269 14.4 16 14.4ZM9.59999 12.8C9.59999 13.6487 9.26285 14.4626 8.66273 15.0627C8.06261 15.6629 7.24868 16 6.39999 16C5.5513 16 4.73736 15.6629 4.13725 15.0627C3.53713 14.4626 3.19999 13.6487 3.19999 12.8C3.19999 11.9513 3.53713 11.1374 4.13725 10.5373C4.73736 9.93714 5.5513 9.6 6.39999 9.6C7.24868 9.6 8.06261 9.93714 8.66273 10.5373C9.26285 11.1374 9.59999 11.9513 9.59999 12.8ZM2.38399 24.5216C2.11085 24.3664 1.9063 24.1138 1.81119 23.8144C1.52928 22.9013 1.52632 21.9249 1.8027 21.0101C2.07908 20.0954 2.62221 19.2839 3.36254 18.6797C4.10287 18.0754 5.0067 17.706 5.9583 17.6185C6.90989 17.5311 7.86593 17.7296 8.70399 18.1888C6.9818 19.8812 5.90388 22.1214 5.65599 24.5232C5.61919 24.8784 5.63359 25.2304 5.69599 25.5696C4.52825 25.4686 3.39726 25.1108 2.38399 24.5216ZM26.304 25.568C27.4716 25.4675 28.6026 25.1102 29.616 24.5216C29.8885 24.3661 30.0925 24.1136 30.1872 23.8144C30.4696 22.9012 30.4729 21.9245 30.1967 21.0095C29.9205 20.0944 29.3774 19.2826 28.637 18.6782C27.8965 18.0737 26.9925 17.704 26.0407 17.6166C25.0888 17.5291 24.1326 17.7278 23.2944 18.1872C25.0181 19.8796 26.0972 22.1204 26.3456 24.5232C26.3812 24.8722 26.3672 25.2245 26.304 25.5696V25.568ZM28.8 12.8C28.8 13.6487 28.4628 14.4626 27.8627 15.0627C27.2626 15.6629 26.4487 16 25.6 16C24.7513 16 23.9374 15.6629 23.3372 15.0627C22.7371 14.4626 22.4 13.6487 22.4 12.8C22.4 11.9513 22.7371 11.1374 23.3372 10.5373C23.9374 9.93714 24.7513 9.6 25.6 9.6C26.4487 9.6 27.2626 9.93714 27.8627 10.5373C28.4628 11.1374 28.8 11.9513 28.8 12.8ZM8.48639 25.904C8.32859 25.7627 8.20626 25.5862 8.12927 25.3889C8.05227 25.1915 8.02279 24.9788 8.04319 24.768C8.2467 22.7992 9.17286 20.9757 10.6426 19.65C12.1124 18.3243 14.0215 17.5906 16.0008 17.5906C17.9801 17.5906 19.8892 18.3243 21.3589 19.65C22.8287 20.9757 23.7549 22.7992 23.9584 24.768C23.9789 24.9789 23.9495 25.1916 23.8725 25.3889C23.7955 25.5863 23.6731 25.7628 23.5152 25.904C21.4579 27.7711 18.7782 28.8037 16 28.8C13.2223 28.8035 10.5432 27.7709 8.48639 25.904Z" />
            </svg>
          }
          children={
            <MenuChild
              child={accountingChild}
              state={showChild}
              pName="Accounting"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Assets" ? null : "Assets"))
          }
          name="Assets"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M16.026 4C13.0147 4 10.2713 4.99467 8.648 5.80733C8.50134 5.88067 8.36467 5.95267 8.23734 6.022C7.98534 6.15933 7.77067 6.28733 7.6 6.4L9.44667 9.11867L10.316 9.46467C13.7133 11.1787 18.2693 11.1787 21.6673 9.46467L22.654 8.95267L24.4 6.4C24.0384 6.16404 23.6623 5.95095 23.274 5.762C21.6587 4.958 18.9807 4 16.0267 4H16.026ZM11.7313 7.07733C11.0774 6.95497 10.4316 6.7929 9.79734 6.592C11.318 5.91667 13.584 5.2 16.026 5.2C17.7173 5.2 19.3167 5.544 20.6393 5.98C19.0893 6.198 17.4353 6.568 15.8593 7.02333C14.6193 7.382 13.17 7.34333 11.7313 7.07733ZM22.3713 10.4533L22.2073 10.536C18.47 12.4213 13.5127 12.4213 9.77534 10.536L9.62 10.4573C4.00534 16.618 -0.281331 27.998 16.026 27.998C32.3333 27.998 27.942 16.4053 22.3713 10.4533ZM15.3333 16C14.9797 16 14.6406 16.1405 14.3905 16.3905C14.1405 16.6406 14 16.9797 14 17.3333C14 17.687 14.1405 18.0261 14.3905 18.2761C14.6406 18.5262 14.9797 18.6667 15.3333 18.6667V16ZM16.6667 14.6667V14H15.3333V14.6667C14.6261 14.6667 13.9478 14.9476 13.4477 15.4477C12.9476 15.9478 12.6667 16.6261 12.6667 17.3333C12.6667 18.0406 12.9476 18.7189 13.4477 19.219C13.9478 19.719 14.6261 20 15.3333 20V22.6667C14.7533 22.6667 14.2593 22.2967 14.0753 21.778C14.048 21.6931 14.004 21.6146 13.9458 21.5471C13.8876 21.4795 13.8165 21.4244 13.7366 21.3848C13.6568 21.3452 13.5698 21.3221 13.4808 21.3167C13.3918 21.3113 13.3027 21.3239 13.2186 21.3536C13.1346 21.3833 13.0573 21.4295 12.9915 21.4896C12.9256 21.5497 12.8725 21.6223 12.8352 21.7033C12.7979 21.7843 12.7772 21.8719 12.7744 21.961C12.7715 22.0501 12.7866 22.1388 12.8187 22.222C13.0026 22.742 13.3431 23.1922 13.7935 23.5106C14.2438 23.829 14.7818 24 15.3333 24V24.6667H16.6667V24C17.3739 24 18.0522 23.719 18.5523 23.219C19.0524 22.7189 19.3333 22.0406 19.3333 21.3333C19.3333 20.6261 19.0524 19.9478 18.5523 19.4477C18.0522 18.9476 17.3739 18.6667 16.6667 18.6667V16C17.2467 16 17.7407 16.37 17.9247 16.8887C17.952 16.9735 17.996 17.052 18.0542 17.1196C18.1124 17.1871 18.1835 17.2423 18.2634 17.2819C18.3432 17.3215 18.4302 17.3446 18.5192 17.35C18.6082 17.3553 18.6973 17.3428 18.7814 17.3131C18.8654 17.2834 18.9427 17.2371 19.0085 17.1771C19.0744 17.117 19.1275 17.0443 19.1648 16.9634C19.2021 16.8824 19.2228 16.7948 19.2256 16.7057C19.2285 16.6166 19.2134 16.5278 19.1813 16.4447C18.9974 15.9247 18.6569 15.4745 18.2065 15.1561C17.7562 14.8377 17.2182 14.6667 16.6667 14.6667ZM16.6667 20V22.6667C17.0203 22.6667 17.3594 22.5262 17.6095 22.2761C17.8595 22.0261 18 21.687 18 21.3333C18 20.9797 17.8595 20.6406 17.6095 20.3905C17.3594 20.1405 17.0203 20 16.6667 20Z"
              />
            </svg>
          }
          children={
            <MenuChild
              child={assetsChild}
              state={showChild}
              pName="Assets"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) =>
              child === "Manage Menu" ? null : "Manage Menu"
            )
          }
          name="Manage Menu"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 14.4C17.273 14.4 18.4939 13.8943 19.3941 12.9941C20.2943 12.0939 20.8 10.873 20.8 9.6C20.8 8.32696 20.2943 7.10606 19.3941 6.20589C18.4939 5.30571 17.273 4.8 16 4.8C14.7269 4.8 13.5061 5.30571 12.6059 6.20589C11.7057 7.10606 11.2 8.32696 11.2 9.6C11.2 10.873 11.7057 12.0939 12.6059 12.9941C13.5061 13.8943 14.7269 14.4 16 14.4ZM9.59999 12.8C9.59999 13.6487 9.26285 14.4626 8.66273 15.0627C8.06261 15.6629 7.24868 16 6.39999 16C5.5513 16 4.73736 15.6629 4.13725 15.0627C3.53713 14.4626 3.19999 13.6487 3.19999 12.8C3.19999 11.9513 3.53713 11.1374 4.13725 10.5373C4.73736 9.93714 5.5513 9.6 6.39999 9.6C7.24868 9.6 8.06261 9.93714 8.66273 10.5373C9.26285 11.1374 9.59999 11.9513 9.59999 12.8ZM2.38399 24.5216C2.11085 24.3664 1.9063 24.1138 1.81119 23.8144C1.52928 22.9013 1.52632 21.9249 1.8027 21.0101C2.07908 20.0954 2.62221 19.2839 3.36254 18.6797C4.10287 18.0754 5.0067 17.706 5.9583 17.6185C6.90989 17.5311 7.86593 17.7296 8.70399 18.1888C6.9818 19.8812 5.90388 22.1214 5.65599 24.5232C5.61919 24.8784 5.63359 25.2304 5.69599 25.5696C4.52825 25.4686 3.39726 25.1108 2.38399 24.5216ZM26.304 25.568C27.4716 25.4675 28.6026 25.1102 29.616 24.5216C29.8885 24.3661 30.0925 24.1136 30.1872 23.8144C30.4696 22.9012 30.4729 21.9245 30.1967 21.0095C29.9205 20.0944 29.3774 19.2826 28.637 18.6782C27.8965 18.0737 26.9925 17.704 26.0407 17.6166C25.0888 17.5291 24.1326 17.7278 23.2944 18.1872C25.0181 19.8796 26.0972 22.1204 26.3456 24.5232C26.3812 24.8722 26.3672 25.2245 26.304 25.5696V25.568ZM28.8 12.8C28.8 13.6487 28.4628 14.4626 27.8627 15.0627C27.2626 15.6629 26.4487 16 25.6 16C24.7513 16 23.9374 15.6629 23.3372 15.0627C22.7371 14.4626 22.4 13.6487 22.4 12.8C22.4 11.9513 22.7371 11.1374 23.3372 10.5373C23.9374 9.93714 24.7513 9.6 25.6 9.6C26.4487 9.6 27.2626 9.93714 27.8627 10.5373C28.4628 11.1374 28.8 11.9513 28.8 12.8ZM8.48639 25.904C8.32859 25.7627 8.20626 25.5862 8.12927 25.3889C8.05227 25.1915 8.02279 24.9788 8.04319 24.768C8.2467 22.7992 9.17286 20.9757 10.6426 19.65C12.1124 18.3243 14.0215 17.5906 16.0008 17.5906C17.9801 17.5906 19.8892 18.3243 21.3589 19.65C22.8287 20.9757 23.7549 22.7992 23.9584 24.768C23.9789 24.9789 23.9495 25.1916 23.8725 25.3889C23.7955 25.5863 23.6731 25.7628 23.5152 25.904C21.4579 27.7711 18.7782 28.8037 16 28.8C13.2223 28.8035 10.5432 27.7709 8.48639 25.904Z" />
            </svg>
          }
          children={
            <MenuChild
              child={settingsChild}
              state={showChild}
              pName="Manage Menu"
            ></MenuChild>
          }
        />

        <DropMenu
          pClick={() =>
            setShowChild((child) => (child === "Settings" ? null : "Settings"))
          }
          name="Settings"
          img={
            <svg
              className={` group-hover:fill-[#106CFF] ${
                darkMode === "true" ? "fill-[#CBCBCB]" : "fill-[#404040]"
              }`}
              width="24"
              height="24"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16 14.4C17.273 14.4 18.4939 13.8943 19.3941 12.9941C20.2943 12.0939 20.8 10.873 20.8 9.6C20.8 8.32696 20.2943 7.10606 19.3941 6.20589C18.4939 5.30571 17.273 4.8 16 4.8C14.7269 4.8 13.5061 5.30571 12.6059 6.20589C11.7057 7.10606 11.2 8.32696 11.2 9.6C11.2 10.873 11.7057 12.0939 12.6059 12.9941C13.5061 13.8943 14.7269 14.4 16 14.4ZM9.59999 12.8C9.59999 13.6487 9.26285 14.4626 8.66273 15.0627C8.06261 15.6629 7.24868 16 6.39999 16C5.5513 16 4.73736 15.6629 4.13725 15.0627C3.53713 14.4626 3.19999 13.6487 3.19999 12.8C3.19999 11.9513 3.53713 11.1374 4.13725 10.5373C4.73736 9.93714 5.5513 9.6 6.39999 9.6C7.24868 9.6 8.06261 9.93714 8.66273 10.5373C9.26285 11.1374 9.59999 11.9513 9.59999 12.8ZM2.38399 24.5216C2.11085 24.3664 1.9063 24.1138 1.81119 23.8144C1.52928 22.9013 1.52632 21.9249 1.8027 21.0101C2.07908 20.0954 2.62221 19.2839 3.36254 18.6797C4.10287 18.0754 5.0067 17.706 5.9583 17.6185C6.90989 17.5311 7.86593 17.7296 8.70399 18.1888C6.9818 19.8812 5.90388 22.1214 5.65599 24.5232C5.61919 24.8784 5.63359 25.2304 5.69599 25.5696C4.52825 25.4686 3.39726 25.1108 2.38399 24.5216ZM26.304 25.568C27.4716 25.4675 28.6026 25.1102 29.616 24.5216C29.8885 24.3661 30.0925 24.1136 30.1872 23.8144C30.4696 22.9012 30.4729 21.9245 30.1967 21.0095C29.9205 20.0944 29.3774 19.2826 28.637 18.6782C27.8965 18.0737 26.9925 17.704 26.0407 17.6166C25.0888 17.5291 24.1326 17.7278 23.2944 18.1872C25.0181 19.8796 26.0972 22.1204 26.3456 24.5232C26.3812 24.8722 26.3672 25.2245 26.304 25.5696V25.568ZM28.8 12.8C28.8 13.6487 28.4628 14.4626 27.8627 15.0627C27.2626 15.6629 26.4487 16 25.6 16C24.7513 16 23.9374 15.6629 23.3372 15.0627C22.7371 14.4626 22.4 13.6487 22.4 12.8C22.4 11.9513 22.7371 11.1374 23.3372 10.5373C23.9374 9.93714 24.7513 9.6 25.6 9.6C26.4487 9.6 27.2626 9.93714 27.8627 10.5373C28.4628 11.1374 28.8 11.9513 28.8 12.8ZM8.48639 25.904C8.32859 25.7627 8.20626 25.5862 8.12927 25.3889C8.05227 25.1915 8.02279 24.9788 8.04319 24.768C8.2467 22.7992 9.17286 20.9757 10.6426 19.65C12.1124 18.3243 14.0215 17.5906 16.0008 17.5906C17.9801 17.5906 19.8892 18.3243 21.3589 19.65C22.8287 20.9757 23.7549 22.7992 23.9584 24.768C23.9789 24.9789 23.9495 25.1916 23.8725 25.3889C23.7955 25.5863 23.6731 25.7628 23.5152 25.904C21.4579 27.7711 18.7782 28.8037 16 28.8C13.2223 28.8035 10.5432 27.7709 8.48639 25.904Z" />
            </svg>
          }
          children={
            <MenuChild
              child={settingsChild}
              state={showChild}
              pName="Settings"
            ></MenuChild>
          }
        />
      </div>
    </div>
  );
};

export default SideNav;
